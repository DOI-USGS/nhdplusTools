% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_nldi.R
\name{navigate_nldi}
\alias{navigate_nldi}
\title{Navigate NLDI}
\usage{
navigate_nldi(nldi_feature, mode = "upstreamMain",
  data_source = "comid", distance_km = NULL, tier = "prod")
}
\arguments{
\item{nldi_feature}{list with names `featureSource` and `featureID` where
`featureSource` is derived from the "source" column of  the response of
discover_nldi_sources() and the `featureSource` is a known identifier
from the specified `featureSource`.}

\item{mode}{character chosen from names, URLs, or url parameters
returned by discover_nldi_navigation(nldi_feature). See examples.}

\item{data_source}{character chosen from "source" column of the response
of discover_nldi_sources() or empty string for flowline geometry.}

\item{distance_km}{numeric distance in km to stop navigating.}

\item{tier}{character optional "prod" or "test"}
}
\value{
sf data.frame with result
}
\description{
Navigate the Network Linked Data Index network.
}
\examples{
\dontrun{
library(sf)
library(dplyr)

discover_nldi_sources()

nldi_nwis <- list(featureSource = "nwissite", featureID = "USGS-08279500")

nav_options <- discover_nldi_navigation(nldi_nwis)

nav_options

navigate_nldi(nldi_feature = nldi_nwis,
              mode = "upstreamTributaries",
              data_source = "") \%>\%
  st_geometry() \%>\%
  plot()

navigate_nldi(nldi_feature = nldi_nwis,
              mode = "UM",
              data_source = "") \%>\%
  st_geometry() \%>\%
  plot(col = "blue", add = TRUE)

navigate_nldi(nldi_feature = nldi_nwis,
              mode = nav_options[["downstreamMain"]],
              data_source = "",
              distance_km = 40) \%>\%
  st_geometry() \%>\%
  plot(col = "red", add = TRUE)

navigate_nldi(nldi_feature = nldi_nwis,
              mode = "UM", data_source = "nwissite",
              distance_km = 0) \%>\%
  st_geometry() \%>\%
  plot(col = "red", add = TRUE)

navigate_nldi(nldi_feature = nldi_nwis,
              mode = "UT",
              data_source = "huc12pp") \%>\%
  st_geometry() \%>\%
  plot(col = rgb(255, 205, 205, 100, maxColorValue = 255),
       pch = 18, add = TRUE)

nwissite <- navigate_nldi(nldi_feature = nldi_nwis,
                          mode = "UT",
                          data_source = "nwissite")

st_geometry(nwissite) \%>\%
  plot(col = "green", add = TRUE)

nwissite
}
}
